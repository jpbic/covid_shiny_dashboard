) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-15, 25, 25, 100), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-15, 25, 35, 100), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-35, 25, 35, 100), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-45, 25, 35, 100), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-45, 25, 35, 80), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-35, 25, 35, 80), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-35, 35, 35, 80), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-35, 35, 35, 70), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-35, 35, 35, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-30, 35, 35, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-30, 35, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-30, 30, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-30, 32, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
source('./utils/config/mp4_config.R')
do.call(generate_mp4, europe_config)
source('./utils/config/mp4_config.R')
do.call(generate_mp4, europe_config)
tm_shape(sf_df, bbox=bb(c(-25, 32, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-25, 32, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-45, 32, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
tm_shape(filter(eu, date=='2020-06-01'),
bbox=bb(c(-40, 32, 40, 72), current.projection = 4326, projection=4326)) +
tm_polygons('pop_perc',
colorNA = NULL,
alpha=0.5,
border.col='#642102',
border.alpha = 0.05
) +
tm_layout(
outer.margins = 0,
main.title.position = 'center',
bg.color = '#dddddd',
main.title.size = 1.5,
legend.width=0.3,
legend.height=0.5,
legend.title.size=1.25,
legend.text.size=1,
legend.position = c('left', 'bottom'),
legend.bg.color = '#FFFFFF',
legend.bg.alpha = 0.7,
frame = F
)
source('./utils/config/mp4_config.R')
do.call(generate_mp4, europe_config)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(us_graph_data)
View(us_graph_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
total_global %>%
filter(date==max(date)) %>%
sum(confirmed)
total_global %>%
filter(date==max(date)) %>%
summarise(x=sum(confirmed))
runApp()
df = total_global %>%
filter(list_country == 'United States')
View(total_global)
df = total_global %>%
filter(iso3=='USA')
df %>%
df$status[df$status=='outbreak']
runApp()
runApp()
runApp()
df = total_global %>%
filter(status=='outbreak')
df = df %>% group_by(list_country) %>%
summarise(ave_days = n())
df = df %>% group_by(iso3) %>%
summarise(ave_days = n())
View(df)
View(df)
df = total_global
df = df %>%
group_by(iso3) %>%
summarise(days = sum(ifelse(status == 'outbreak', 1, 0)))
View(df)
df = mutate(df, days_percentile = trunc(rank(days))/length(ob_days))
df = mutate(df, days_percentile = trunc(rank(days))/length(days))
View(df)
runApp()
View(df)
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp(launch.browser = T)
runApp()
runApp()
rm(list=ls())
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(list=ls())
