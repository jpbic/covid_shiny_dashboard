select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
browser()
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(!starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!group_by_cols) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
left_join(pop, by=c('iso3' = 'country')) %>%
mutate(perc_pop = 100 * data_col / population) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
group_by_cols
group_by_cols = c('Province_State', 'date')
confirmed = read.csv('./data/us_data.csv', stringsAsFactors = T)
View(confirmed)
confirmed %>%
filter(type=='confirmed') %>%
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
browser()
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!group_by_cols) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
left_join(pop, by=c('iso3' = 'country')) %>%
mutate(perc_pop = 100 * data_col / population) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
confirmed %>%
filter(type=='confirmed') %>%
pivot_longer(starts_with('X'), names_to='date', values_to='data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!group_by_cols) %>%
summarise(data_col = sum(data_col))
!!!as.symbol(group_by_cols)
confirmed = confirmed %>%
filter(type=='confirmed') %>%
pivot_longer(starts_with('X'), names_to='date', values_to='data_col')
View(confirmed)
confirmed = confirmed %>%
mutate(date=as.Date(gsub('X', '', date), '%m.%d.%y'))
confirmed %>% group_by(group_by_cols)
syms(group_by_cols)
confirmed %>% group_by(!!!syms(group_by_cols))
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
browser()
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=iso3, date)) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
left_join(pop, by=c('iso3' = 'country')) %>%
mutate(perc_pop = 100 * data_col / population) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
browser()
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
left_join(pop, by=c('iso3' = 'country')) %>%
mutate(perc_pop = 100 * data_col / population) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
generate_mp4 = function(
input_file,
output_file,
level=NA,
type,
group_by_cols,
geom_join_df,
geom_left_join_by,
geom_right_join_by,
legend_title=NA,
polygon_col,
breaks=NULL,
pal=NULL,
bbox=NULL,
width=1044,
height=470,
fps=8
) {
sf_df = create_map_data(input_file, type, group_by_cols, geom_join_df, geom_left_join_by, geom_right_join_by)
if (level == 'world') {
pop = filter(world_bank_pop, indicator == 'SP.POP.TOTL') %>%
select(country, population = `2017`)
sf_df = sf_df %>%
left_join(pop, by=c('iso3' = 'country')) %>%
mutate(perc_pop = 100 * data_col / population)
}
tmap_animation(get_maps_mp4(sf_df, legend_title, polygon_col, breaks, pal, bbox),
filename=output_file, fps=fps, width=width, height=height)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
browser()
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
force(left_join_by)
force(right_join_by)
force(type)
force(input_file)
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(!!sym(left_join_by) = !!sym(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(!!sym(left_join_by) = !!sym(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(!!sym(left_join_by) = !!sym(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
generate_mp4('./data/us_data.csv', './www/us_conf_anim.mp4', 'state', 'confirmed', c('Province_State'),
select(USAboundaries::us_states(), name, geometry), 'Province_State', 'name',
'% Change in New Confirmed Cases', 'perc_change', conf_breaks, conf_pal, us_bbox)
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(!!sym(left_join_by) = !!sym(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(left_join_by = right_join_by)) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(!!sym(left_join_by) = right_join_by)) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
sym('name')
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(sym(left_join_by) = sym(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
as.symbol('data')
col = 'data'
as.symbol(col)
create_map_data = function(
input_file,
type,
group_by_cols,
join_df,
left_join_by,
right_join_by
) {
message('Creating SF Object')
group_by_cols = append(group_by_cols, 'date')
sf_df = read.csv(input_file, stringsAsFactors = T) %>%
filter(type == type) %>%
pivot_longer(starts_with('X'), names_to = 'date', values_to = 'data_col') %>%
mutate(date = as.Date(gsub('X', '', date), '%m.%d.%y')) %>%
group_by(!!!syms(group_by_cols)) %>%
summarise(data_col = sum(data_col)) %>%
mutate(change = data_col - lag(data_col, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change = slide_dbl(change, mean, .before=7, .after=7)) %>%
mutate(change_delta = change - lag(change, n = 1, default=0, order_by=!!!syms(group_by_cols))) %>%
mutate(rolling_ave_change_delta = slide_dbl(change_delta, mean, .before=7, .after=7)) %>%
mutate(perc_change = ifelse(
rolling_ave_change == 0 | data_col < 1000,
0,
100 * rolling_ave_change_delta / abs(rolling_ave_change)
)) %>%
inner_join(join_df, by=c(as.symbol(left_join_by) = as.symbol(right_join_by))) %>%
st_sf()
message('SF Object Created')
return(sf_df)
}
